name: Pull Request Actions
on:
  push:
  pull_request:
    branches: [master]

jobs:
  install:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 14
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package.json') }}
      - name: Install packages
        if: steps.cache-npm.outputs.cache-hit != 'true'
        id: install
        run: npm ci

  report_install_failed:
    if: failure()
    runs-on: ubuntu-20.04
    needs: [install]
    steps:
      - name: send log if install fail
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: \`npm ci\` failed
      
  lint:
    runs-on: ubuntu-20.04
    needs: [install]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 14
      - name: Use cached node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package.json') }}
      - name: Lint
        run: npm run lint

  report_lint_failed:
    if: failure()
    runs-on: ubuntu-20.04
    needs: [lint]
    steps:
      - name: send log if lint fail
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: Lint failed
  
  test:
    runs-on: ubuntu-20.04
    needs: [lint]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 14
      - name: Use cached node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package.json') }}
      - name: Test
        run: npm run test

  report_test_failed:
    if: failure()
    runs-on: ubuntu-20.04
    needs: [test]
    steps:
      - name: send log if tests fail
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: Tests failed

  deploy:
    runs-on: ubuntu-20.04
    needs: [test]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 14
      - name: Use cached node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('package.json') }}
      - name: Build
        run: npm run build
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: 'just-a-placeholder-so-we-dont-get-errors'
      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
      - name: Deploy with rsync
        run: rsync --archive --delete --compress ./dist/ -P ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:app

  report_deploy_failed:
    if: failure()
    runs-on: ubuntu-20.04
    needs: [deploy]
    steps:
      - name: send log if deploy fail
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: Deploy failed

  

      